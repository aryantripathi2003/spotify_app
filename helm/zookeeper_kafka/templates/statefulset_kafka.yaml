apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    service: {{ .Values.kafka.appName }}
  name: {{ .Values.kafka.appName }}
spec:
  serviceName: {{ .Values.kafka.appName }}
  replicas: 1
  selector:
    matchLabels:
      service: {{ .Values.kafka.appName }}
  template:
    metadata:
      labels:
        network/kafka-network: "true"
        service: {{ .Values.kafka.appName }}
    spec:
      securityContext:
        fsGroup: 1000
      enableServiceLinks: false
      initContainers:
        - name: {{ .Values.kafka.initContainer.name }}
          image: {{ .Values.kafka.initContainer.image.repository }}
          command: [ "sh", "-c", "until nc -z zookeeper-app.default 2181; do echo waiting for zookeeper; sleep 2; done" ]
      containers:
        - name: {{ .Values.kafka.appName }}
          imagePullPolicy: IfNotPresent
          image: "{{ .Values.kafka.image.repository }}:{{ .Values.kafka.image.tag }}"
          ports:
            - containerPort: {{ .Values.kafka.service.port }}
          env:
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper-app.default:2181"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka-app.default:9092"
            - name: KAFKA_LISTENERS
              value: "PLAINTEXT://0.0.0.0:9092"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL
              value: "PLAINTEXT"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_LOG_DIRS
              value: "/var/lib/kafka/data/kafka-logs"
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/kafka/data/kafka-logs
              name: {{ .Values.kafka.data.name }}
      hostname: {{ .Values.kafka.appName }}
      restartPolicy: Always
  volumeClaimTemplates:
    - metadata:
        name: {{ .Values.kafka.data.name }}
      spec:
        storageClassName: standard
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.kafka.data.storage }}