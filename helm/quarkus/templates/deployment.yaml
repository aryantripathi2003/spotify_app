apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}
    spec:
      initContainers:
        - name: wait-for-kafka
          image: busybox
          command: [ "sh", "-c", "until nc -z kafka-app.default 9092; do echo waiting for kafka; sleep 2; done" ]
        - name: wait-for-mongodb
          image: busybox
          command: [ "sh", "-c", "until nc -z mongodb-app.default 27017; do echo waiting for mongo; sleep 2; done" ]
        - name: wait-for-redis
          image: busybox
          command: [ "sh", "-c", "until nc -z redis-app.default 6379; do echo waiting for redis; sleep 2; done" ]
        - name: wait-for-elasticsearch
          image: busybox
          command: [ "sh", "-c", "until nc -z elasticsearch-app.default 9200; do echo waiting for elasticsearch; sleep 2; done" ]
      containers:
        - name: {{ .Values.appName }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /q/health/live
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /q/health/ready
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 5
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /q/health/ready
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 30